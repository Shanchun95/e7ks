<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dashan.exam.mapper.E7CertEntryMapper">
  <resultMap id="BaseResultMap" type="com.dashan.exam.po.E7CertEntry">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="cert_id" jdbcType="INTEGER" property="certId" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="classify" jdbcType="INTEGER" property="classify" />
    <result column="option" jdbcType="VARCHAR" property="option" />
    <result column="exam" jdbcType="INTEGER" property="exam" />
    <result column="hard" jdbcType="INTEGER" property="hard" />
    <result column="view" jdbcType="INTEGER" property="view" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.dashan.exam.po.E7CertEntry">
    <result column="des" jdbcType="LONGVARCHAR" property="des" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, cert_id, sort, classify, option, exam, hard, view
  </sql>
  <sql id="Blob_Column_List">
    des
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.dashan.exam.po.E7CertEntryExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from e7_cert_entry
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.dashan.exam.po.E7CertEntryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from e7_cert_entry
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from e7_cert_entry
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from e7_cert_entry
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dashan.exam.po.E7CertEntryExample">
    delete from e7_cert_entry
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dashan.exam.po.E7CertEntry">
    insert into e7_cert_entry (id, name, cert_id, 
      sort, classify, option, 
      exam, hard, view, des
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{certId,jdbcType=INTEGER}, 
      #{sort,jdbcType=INTEGER}, #{classify,jdbcType=INTEGER}, #{option,jdbcType=VARCHAR}, 
      #{exam,jdbcType=INTEGER}, #{hard,jdbcType=INTEGER}, #{view,jdbcType=INTEGER}, #{des,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dashan.exam.po.E7CertEntry">
    insert into e7_cert_entry
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="certId != null">
        cert_id,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="classify != null">
        classify,
      </if>
      <if test="option != null">
        option,
      </if>
      <if test="exam != null">
        exam,
      </if>
      <if test="hard != null">
        hard,
      </if>
      <if test="view != null">
        view,
      </if>
      <if test="des != null">
        des,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="certId != null">
        #{certId,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="classify != null">
        #{classify,jdbcType=INTEGER},
      </if>
      <if test="option != null">
        #{option,jdbcType=VARCHAR},
      </if>
      <if test="exam != null">
        #{exam,jdbcType=INTEGER},
      </if>
      <if test="hard != null">
        #{hard,jdbcType=INTEGER},
      </if>
      <if test="view != null">
        #{view,jdbcType=INTEGER},
      </if>
      <if test="des != null">
        #{des,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dashan.exam.po.E7CertEntryExample" resultType="java.lang.Long">
    select count(*) from e7_cert_entry
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update e7_cert_entry
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.certId != null">
        cert_id = #{record.certId,jdbcType=INTEGER},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.classify != null">
        classify = #{record.classify,jdbcType=INTEGER},
      </if>
      <if test="record.option != null">
        option = #{record.option,jdbcType=VARCHAR},
      </if>
      <if test="record.exam != null">
        exam = #{record.exam,jdbcType=INTEGER},
      </if>
      <if test="record.hard != null">
        hard = #{record.hard,jdbcType=INTEGER},
      </if>
      <if test="record.view != null">
        view = #{record.view,jdbcType=INTEGER},
      </if>
      <if test="record.des != null">
        des = #{record.des,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update e7_cert_entry
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      cert_id = #{record.certId,jdbcType=INTEGER},
      sort = #{record.sort,jdbcType=INTEGER},
      classify = #{record.classify,jdbcType=INTEGER},
      option = #{record.option,jdbcType=VARCHAR},
      exam = #{record.exam,jdbcType=INTEGER},
      hard = #{record.hard,jdbcType=INTEGER},
      view = #{record.view,jdbcType=INTEGER},
      des = #{record.des,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update e7_cert_entry
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      cert_id = #{record.certId,jdbcType=INTEGER},
      sort = #{record.sort,jdbcType=INTEGER},
      classify = #{record.classify,jdbcType=INTEGER},
      option = #{record.option,jdbcType=VARCHAR},
      exam = #{record.exam,jdbcType=INTEGER},
      hard = #{record.hard,jdbcType=INTEGER},
      view = #{record.view,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dashan.exam.po.E7CertEntry">
    update e7_cert_entry
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="certId != null">
        cert_id = #{certId,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="classify != null">
        classify = #{classify,jdbcType=INTEGER},
      </if>
      <if test="option != null">
        option = #{option,jdbcType=VARCHAR},
      </if>
      <if test="exam != null">
        exam = #{exam,jdbcType=INTEGER},
      </if>
      <if test="hard != null">
        hard = #{hard,jdbcType=INTEGER},
      </if>
      <if test="view != null">
        view = #{view,jdbcType=INTEGER},
      </if>
      <if test="des != null">
        des = #{des,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.dashan.exam.po.E7CertEntry">
    update e7_cert_entry
    set name = #{name,jdbcType=VARCHAR},
      cert_id = #{certId,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      classify = #{classify,jdbcType=INTEGER},
      option = #{option,jdbcType=VARCHAR},
      exam = #{exam,jdbcType=INTEGER},
      hard = #{hard,jdbcType=INTEGER},
      view = #{view,jdbcType=INTEGER},
      des = #{des,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dashan.exam.po.E7CertEntry">
    update e7_cert_entry
    set name = #{name,jdbcType=VARCHAR},
      cert_id = #{certId,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      classify = #{classify,jdbcType=INTEGER},
      option = #{option,jdbcType=VARCHAR},
      exam = #{exam,jdbcType=INTEGER},
      hard = #{hard,jdbcType=INTEGER},
      view = #{view,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>